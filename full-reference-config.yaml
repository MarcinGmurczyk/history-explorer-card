---
type: custom:history-explorer-card
cardName: 'default'

# Header of the card
header: 'History explorer'

# List of pre-configured (or locked) graphs
graphs:
  # Pre-defined list of entities for the graph to display
  entities:
      # Each entity can be specified individually by name, or with wildcards
    - entity: null
      
      # Additional entity options can be specified, much like `$.entityOptions`, for example scale
      scale: 1.0
  
  # Each graph can be given its own title, by default they will not have one
  title: undefined

  # Which type of graph should this be
  # Available types are: line, bar, arrowline, timeline
  # By default, type is determined by the entity's state class and units
  type: ? line, bar, arrowline, timeline

  # Additional options for the graph
  options:
    # Height of the graph, in pixels. Defaults to being either `lineGraphHeight`, `barGraphHeight` or calculated, depending on graph type
    height: null

    # The default interval that bar graphs will be summarised over. Can be one of "10m", "hourly", "daily", or "monthly".
    interval: "hourly"
    
    # (line graph only) If true, show the individual samples making up the line graph
    showSamples: False

    # If true, show the time labels on graph
    showTimeLabels: True

    # For bar charts, this can be set to True to enable stacking the values
    stacked: False

    # Minimum value of the Y-axis (automatically calculated by default)
    ymin: null

    # Maximum value of the Y-axis (automatically calculated by default)
    ymax: null

    # Step size to display on the Y-axis (automatically calculated by default)
    ystepsize: null


# Dictionary of colour overrides for specified sensor states
stateColors:
  # Key is the name of the sensor and state, for example "on" state for "door" sensor would be "door.on"
  # Value is the colour that the specified state should have
  door.on: blue


# Overrides options of entities globlly, especially useful for entities added by the user through the UI view
entityOptions:
  # Keys in this dictionary should be the name (or device class, or domain) of whichever entity is being configured, for example "humidity"
  humidity:
    # If true, hide the entity in the graphs
    hidden: False
    
    # (line graph only) If true, show the individual samples making up the line graph
    showSamples: False

    # Can be used to define a custom JS expression to post-process the state data before it goes into the graph. Should be defined as a JS expression taking one argument called `state` containing the value of the data series at a given point.
    process: null

    # Colour of the line in the graph, defaults to automatically assigning a colour
    color: null

    # Fill colour of the area under the line in the graph, defaults to a lighter shade of 'color'
    fill: null

    # Style of the line in the graph. Can be: points, shortlines, longlines, pointline, or default which is a solid line
    dashMode: "solid"

    # Line width, otherwise defaults to the card's value at $.lineWidth
    width: null

    # (line graph only) Line interpolation mode, otherwise defaults to the card's value at $.lineMode
    lineMode: null

    # Can be used to scale a specified entity's value by the given factor
    scale: 1.0

    # (bar graph only) If true, specifies that an entity should be considered to be net-metering for bar charts, and that the value can go down as well as up (rather than being interpreted as the state being reset)
    netBars: False
    
    # Height of the graph created when a user adds this entity. See $graphs.options.height
    height: null
    
    # Default interval of the graph created when a user adds this entity. See $graphs.options.interval
    interval: "hourly"

# Optional: TODO
labelAreaWidth: 65

# Optional: TODO
labelsVisible: True

# Optional: TODO
legendVisible: True

# Optional: TODO
cursor:
  # Optional: TODO
  mode: auto
  # Optional: TODO
  types: ['timeline']

# Optional: TODO
tooltip:
  # Optional: TODO
  showColorsLine: True
  # Optional: TODO
  showColorsTimeline: True
  # Optional: TODO
  size: auto
  # Optional: TODO
  showDuration: False
  # Optional: TODO
  showLabel: True
  # Optional: TODO
  stateTextMode: auto

# Optional: TODO
stateColorSeed: 137

# Optional: TODO
stateTextMode: auto

# Optional: TODO
decimation: undefined

# Optional: TODO
rounding: 2

# Line interpolation mode. Can be: curves, lines, or stepped
lineMode: "curves"

# Line width for lines in graphs
lineWidth: 2.0

# Optional: TODO
showUnavailable: False

# Optional: TODO
showCurrentValues: True # TODO: I want this by graph

axisAddMarginMin: False
axisAddMarginMax: False
recordedEntitiesOnly: False # TODO: I want this, but does it work?
filterEntities: undefined
combineSameUnits: False
defaultTimeRange: '24'
defaultTimeOffset: undefined
timeTicks:
  density: 'high'
  densityOverride: undefined
  dateFormat: 'short'
lineGraphHeight: 250
barGraphHeight: 150
timelineBarHeight: 24
timelineBarSpacing: 40
refresh:
  automatic: False
  interval: undefined
csv:
  separator: undefined
  timeFormat: undefined
  exportAttributes: undefined
  statisticsPeriod: 'hour'
  numberLocale: undefined
statistics:
  enabled: True
  mode: 'mean'
  retention: undefined
  period: 'hour'
  force: undefined
uiColors:
  closeButton: '#000000001f'
  # Optional: Page's '--primary-color' at 1f transparency
  buttons: '#03a9f41f'
  selector: undefined
infoPanel: {}
uiLayout:
  toolbar: ?
  selector: ?
  sticky: ?
  invertZoom: False
  interval: 'hide'
