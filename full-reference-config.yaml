---
type: custom:history-explorer-card
cardName: 'default'

# Header of the card
header: 'History explorer'

# List of pre-configured (or locked) graphs
graphs:
  # Pre-defined list of entities for the graph to display
  entities:
      # Each entity can be specified individually by name, or with wildcards
    - entity: null
      
      # Additional entity options can be specified, much like `$.entityOptions`, for example scale
      scale: 1.0
  
  # Each graph can be given its own title, by default they will not have one
  title: undefined

  # Which type of graph should this be
  # Available types are: line, bar, arrowline, timeline
  # By default, type is determined by the entity's state class and units
  type: ? line, bar, arrowline, timeline

  # Additional options for the graph
  options:
    # Height of the graph, in pixels. Defaults to being either `lineGraphHeight`, `barGraphHeight` or calculated, depending on graph type
    height: null

    # The default interval that bar graphs will be summarised over. Can be one of "10m", "hourly", "daily", or "monthly".
    interval: "hourly"
    
    # (line graph only) If true, show the individual samples making up the line graph
    showSamples: False

    # If true, show the time labels on graph
    showTimeLabels: True

    # For bar charts, this can be set to True to enable stacking the values
    stacked: False

    # Minimum value of the Y-axis (automatically calculated by default)
    ymin: null

    # Maximum value of the Y-axis (automatically calculated by default)
    ymax: null

    # Step size to display on the Y-axis (automatically calculated by default)
    ystepsize: null


# Dictionary of colour overrides for specified sensor states
stateColors:
  # Key is the name of the sensor and state, for example "on" state for "door" sensor would be "door.on"
  # Value is the colour that the specified state should have
  door.on: blue


# Overrides options of entities globlly, especially useful for entities added by the user through the UI view
entityOptions:
  # Keys in this dictionary should be the name (or device class, or domain) of whichever entity is being configured, for example "humidity"
  humidity:
    # If true, hide the entity in the graphs
    hidden: False
    
    # (line graph only) If true, show the individual samples making up the line graph
    showSamples: False

    # Can be used to define a custom JS expression to post-process the state data before it goes into the graph. Should be defined as a JS expression taking one argument called `state` containing the value of the data series at a given point.
    process: null

    # Colour of the line in the graph, defaults to automatically assigning a colour
    color: null

    # Fill colour of the area under the line in the graph, defaults to a lighter shade of 'color'
    fill: null

    # Style of the line in the graph. Can be: points, shortlines, longlines, pointline, or default which is a solid line
    dashMode: "solid"

    # Line width, otherwise defaults to the card's value at $.lineWidth
    width: null

    # (line graph only) Line interpolation mode, otherwise defaults to the card's value at $.lineMode
    lineMode: null

    # Can be used to scale a specified entity's value by the given factor
    scale: 1.0

    # (bar graph only) If true, specifies that an entity should be considered to be net-metering for bar charts, and that the value can go down as well as up (rather than being interpreted as the state being reset)
    netBars: False
    
    # Height of the graph created when a user adds this entity. See $graphs.options.height
    height: null
    
    # Default interval of the graph created when a user adds this entity. See $graphs.options.interval
    interval: "hourly"

# Width of the Y-axis label area on the left side of the graph
labelAreaWidth: 65

# Whether to display the Y-axis labels on the left side of the graph, or hide them. For state timelines, this will show or hide the state labels.
labelsVisible: True

# Whether to display the list of entity labels at the top of the graph
legendVisible: True

# Configuration of the vertical line drawn on the graph under the user's cursor (for non-mobile users only)
cursor:
  # Whether to show the vertical line on all graphs in the card (all), just the hovered graph (auto), or hide it on all graphs (hide). Possible options: auto, all, or hide
  mode: auto
  # Which types of graph should a vertical line. Defaults to just timeline charts, but bar, line, and arrowline graphs can be specified here.
  types: ['timeline']

# Configuration related to the tooltip displaying
tooltip:
  # Whether to show the colours of each data series in the tool tip on line graphs
  # (Can also be set with $.showTooltipColorsLine)
  showColorsLine: True
  
  # Whether to show the colours of each data series in the tool tip on timeline graphs
  # (Can also be set with $.showTooltipColorsTimeline)
  showColorsTimeline: True

  # The size of the tooltip to display. Can also be set to: 'full', 'slim', 'compact'
  # (Can also be set with $.tooltipSize)
  size: "auto"

  # Whether to show the duration of the given state on the tooltip for timeline graphs
  # (Can also be set with $.tooltipShowDuration)
  showDuration: False

  # Whether to show the name of the data series on the tooltip (for line and bar graphs)
  showLabel: True

  # Similar to $.stateTextMode config, but for the tooltip, defaults to matching $.stateTextMode, or auto
  stateTextMode: "auto"

# If timeline state colours have not been defined, this is used as a seed value when randomly generating the colours for each state value
stateColorSeed: 137

# Whether to use device-class dependent state names (e.g. Open/Closed, Detected/Clear) for state labels in timeline charts, or use the raw state values, or just hide the state labels. Can be 'auto', 'raw', or 'hide'
stateTextMode: auto

# TODO
decimation: undefined

# How many decimal places to round values to, in tool tips and labels
rounding: 2

# Line interpolation mode. Can be: curves, lines, or stepped
lineMode: "curves"

# Line width for lines in line graphs
lineWidth: 2.0

# TODO
showUnavailable: False

# TODO
showCurrentValues: True # TODO: I want this by graph

# TODO
axisAddMarginMin: False

# TODO
axisAddMarginMax: False

# TODO
recordedEntitiesOnly: False # TODO: I want this, but does it work?

# TODO
filterEntities: undefined

# TODO
combineSameUnits: False

# TODO
defaultTimeRange: '24'

# TODO
defaultTimeOffset: undefined

# TODO
timeTicks:
  # TODO
  density: 'high'
  # TODO
  densityOverride: undefined
  # TODO
  dateFormat: 'short'

# TODO
lineGraphHeight: 250

# TODO
barGraphHeight: 150

# TODO
timelineBarHeight: 24

# TODO
timelineBarSpacing: 40

# TODO
refresh:
  # TODO
  automatic: False
  # TODO
  interval: undefined

# TODO
csv:
  # TODO
  separator: undefined
  # TODO
  timeFormat: undefined
  # TODO
  exportAttributes: undefined
  # TODO
  statisticsPeriod: 'hour'
  # TODO
  numberLocale: undefined

# TODO
statistics:
  # TODO
  enabled: True
  # TODO
  mode: 'mean'
  # TODO
  retention: undefined
  # TODO
  period: 'hour'
  # TODO
  force: undefined

# TODO
uiColors:
  # TODO
  closeButton: '#000000001f'
  # Color of the buttons. Page's '--primary-color' at 1f transparency
  buttons: '#03a9f41f'
  # TODO
  selector: undefined

# TODO
infoPanel: {}

# TODO
uiLayout:
  # TODO
  toolbar: ?
  # TODO
  selector: ?
  # TODO
  sticky: ?
  # TODO
  invertZoom: False
  # TODO
  interval: 'hide'
